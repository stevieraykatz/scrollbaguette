// SPDX-License-Identifier: MIT
// author: @stevieraykatz
pragma solidity 0.8.19;

import {BakeryCommon} from "./BakeryCommon.sol";

library BakeSuperCrisp {
  string constant SEG24 =
    '" d="M 317.5,227.5 C 317.842,228.338 318.508,228.672 319.5,228.5C 320.848,229.186 322.015,230.186 323,231.5C 324.785,230.646 325.951,231.313 326.5,233.5C 326.863,235.911 325.863,237.411 323.5,238C 323.957,238.414 324.291,238.914 324.5,239.5C 323.335,240.584 322.002,241.417 320.5,242C 319.229,244.079 319.229,246.579 320.5,249.5C 318.799,249.966 317.299,249.966 316,249.5C 315.228,250.849 314.061,251.682 312.5,252C 313.737,252.232 314.737,252.732 315.5,253.5C 313.712,253.785 312.045,253.452 310.5,252.5C 311.791,251.473 311.791,250.473 310.5,249.5C 308.659,247.246 306.492,245.246 304,243.5C 303.517,242.552 303.351,241.552 303.5,240.5C 304.552,240.649 305.552,240.483 306.5,240C 304.472,237.424 302.305,236.924 300,238.5C 299.517,237.552 299.351,236.552 299.5,235.5C 296.286,234.56 293.286,233.06 290.5,231C 291.956,230.577 292.456,229.744 292,228.5C 290.413,229.727 289.079,229.394 288,227.5C 287.667,228.5 287.333,229.5 287,230.5C 286.217,228.567 286.717,227.067 288.5,226C 287.552,225.517 286.552,225.351 285.5,225.5C 285.094,223.891 285.094,222.557 285.5,221.5C 287.271,222.035 287.604,222.869 286.5,224C 289.525,224.361 292.525,224.861 295.5,225.5C 296.167,225.167 296.833,224.833 297.5,224.5C 296.083,224.141 294.75,222.975 293.5,221C 294.098,218.952 295.431,217.785 297.5,217.5C 299.833,217.833 300.167,218.833 298.5,220.5C 302.361,221.598 302.361,222.431 298.5,223C 299.766,223.309 300.933,223.809 302,224.5C 304.398,221.946 306.731,221.946 309,224.5C 309.974,222.122 310.641,222.456 311,225.5C 311.689,224.643 312.522,223.977 313.5,223.5C 313.694,225.04 314.527,226.706 316,228.5C 316.383,227.944 316.883,227.611 317.5,227.5 Z"/></g>';
  string constant SEG26 =
    '" d="M 326.5,247.5 C 324.821,247.892 323.154,248.392 321.5,249C 322.624,249.249 323.624,249.749 324.5,250.5C 323.37,251.622 322.703,252.956 322.5,254.5C 321.791,255.404 320.791,255.737 319.5,255.5C 315.107,255.543 314.774,255.043 318.5,254C 317.552,253.517 316.552,253.351 315.5,253.5C 314.737,252.732 313.737,252.232 312.5,252C 314.061,251.682 315.228,250.849 316,249.5C 317.299,249.966 318.799,249.966 320.5,249.5C 319.229,246.579 319.229,244.079 320.5,242C 322.002,241.417 323.335,240.584 324.5,239.5C 324.291,238.914 323.957,238.414 323.5,238C 325.863,237.411 326.863,235.911 326.5,233.5C 327.375,231.432 328.541,229.432 330,227.5C 330.779,228.728 331.779,229.728 333,230.5C 334.15,229.576 335.15,229.576 336,230.5C 336.333,229.833 336.667,229.167 337,228.5C 337.606,231.076 337.106,233.41 335.5,235.5C 337.278,239.499 335.945,241.499 331.5,241.5C 331.649,242.552 331.483,243.552 331,244.5C 330.667,244.167 330.333,243.833 330,243.5C 329.31,245.35 328.144,246.684 326.5,247.5 Z"/></g>';

  // s6 => SUPERCRISP = 24, 26
  function getSuperCrisp(string memory s6) public pure returns (string memory superCrisp) {
    string memory seg24 = string.concat(BakeryCommon.PREFIX, s6, SEG24);
    string memory seg26 = string.concat(BakeryCommon.PREFIX, s6, SEG26);
    superCrisp = string(abi.encodePacked(seg24, seg26));
  }
}
